Index: src/newlib/libc/stdio/nano-vfprintf.c
===================================================================
--- newlib-snapshot.orig/src/newlib/libc/stdio/nano-vfprintf.c
+++ newlib-snapshot/src/newlib/libc/stdio/nano-vfprintf.c
@@ -168,16 +168,6 @@ static char *rcsid = "$Id$";
 #include "vfieeefp.h"
 #include "nano-vfprintf_local.h"
 
-
-/* GCC PR 14577 at https://gcc.gnu.org/bugzilla/show_bug.cgi?id=14557 */
-#if __STDC_VERSION__ >= 201112L
-#define va_ptr(ap) _Generic(&(ap), va_list *: &(ap), default: (va_list *)(ap))
-#elif __GNUC__ >= 4
-#define va_ptr(ap) __builtin_choose_expr(__builtin_types_compatible_p(__typeof__(&(ap)), va_list *), &(ap), (va_list *)(ap))
-#else
-#define va_ptr(ap) (sizeof(ap) == sizeof(va_list) ? (va_list *)&(ap) : (va_list *)(ap))
-#endif
-
 /* The __ssputs_r function is shared between all versions of vfprintf
    and vfwprintf.  */
 #ifdef STRING_ONLY
@@ -636,12 +626,14 @@ _VFPRINTF_R (struct _reent *data,
 	    }
 	  else
 	    {
-	      n = _printf_float (data, &prt_data, fp, pfunc, va_ptr(ap));
+	      n = _printf_float (data, &prt_data, fp, pfunc, &ap);
 	    }
 	}
       else
 #endif
-	n = _printf_i (data, &prt_data, fp, pfunc, va_ptr(ap));
+	{
+	      n = _printf_i (data, &prt_data, fp, pfunc, &ap);
+	}
 
       if (n == -1)
 	goto error;
Index: src/newlib/libc/stdio/nano-vfscanf.c
===================================================================
--- newlib-snapshot.orig/src/newlib/libc/stdio/nano-vfscanf.c
+++ newlib-snapshot/src/newlib/libc/stdio/nano-vfscanf.c
@@ -119,15 +119,6 @@ Supporting OS subroutines required:
 #include "../stdlib/local.h"
 #include "nano-vfscanf_local.h"
 
-/* GCC PR 14577 at https://gcc.gnu.org/bugzilla/show_bug.cgi?id=14557 */
-#if __STDC_VERSION__ >= 201112L
-#define va_ptr(ap) _Generic(&(ap), va_list *: &(ap), default: (va_list *)(ap))
-#elif __GNUC__ >= 4
-#define va_ptr(ap) __builtin_choose_expr(__builtin_types_compatible_p(__typeof__(&(ap)), va_list *), &(ap), (va_list *)(ap))
-#else
-#define va_ptr(ap) (sizeof(ap) == sizeof(va_list) ? (va_list *)&(ap) : (va_list *)(ap))
-#endif
-
 #define VFSCANF vfscanf
 #define _VFSCANF_R _vfscanf_r
 #define __SVFSCANF __svfscanf
@@ -427,12 +418,24 @@ __SVFSCANF_R (struct _reent *rptr,
 	}
       ret = 0;
       if (scan_data.code < CT_INT)
-	ret = _scanf_chars (rptr, &scan_data, fp, va_ptr(ap));
+	{
+	  va_list ap2;
+	  va_copy(ap2, ap);
+	  ret = _scanf_chars (rptr, &scan_data, fp, &ap2);
+	}
       else if (scan_data.code < CT_FLOAT)
-	ret = _scanf_i (rptr, &scan_data, fp, va_ptr(ap));
+	{
+	  va_list ap2;
+	  va_copy(ap2, ap);
+	  ret = _scanf_i (rptr, &scan_data, fp, &ap2);
+	}
 #ifdef FLOATING_POINT
       else if (_scanf_float)
-	ret = _scanf_float (rptr, &scan_data, fp, va_ptr(ap));
+	{
+	  va_list ap2;
+	  va_copy(ap2, ap);
+	  ret = _scanf_float (rptr, &scan_data, fp, &ap2);
+	}
 #endif
 
       if (ret == MATCH_FAILURE)
